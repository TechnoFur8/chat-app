services:
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    container_name: chat-server
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_NAME=chat
      - DB_USER=postgres
      - DB_PASSWORD=root
      - DB_HOST=db
      - DB_PORT=5432
      - JWT_SECRET=E0qTsVYIxVxPXwfnnCik1FJRIQFL34PD
      - CLOUDINARY_CLOUD_NAME=dsy57gnum
      - CLOUDINARY_API_KEY=829736882622915
      - CLOUDINARY_API_SECRET=Nd9gIW5AFLvS-3zD7Krq6zTRLQE
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: chat
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: client-chat
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  postgres_data: